# Be on the lookout for problems with undesirable CXXFLAGS and LDFLAGS
# propagating through this script.  Send email to flemingg@jlab.org
# if you find such a problem.
                                                                                
prefix="@prefix@"
exec_prefix="@exec_prefix@"
exec_prefix_set=no
                                                                                
version="@VERSION@"

bagel_qdp_cxx="@CXX@"
bagel_qdp_cxxflags="@CXXFLAGS@ @QDPXX_CXXFLAGS@ -I@includedir@"
bagel_qdp_ldflags="@LDFLAGS@ @QDPXX_LDFLAGS@ -L@libdir@"
bagel_qdp_libs="-lbagel_qdp @QDPXX_LIBS@ @LIBS@"
bagel_qdp_ranlib="@RANLIB@"
bagel_qdp_ar="@AR@"

usage()
{
  cat <<EOF
Usage: bagel-config [OPTIONS]
Options:
  [--prefix[=DIR]]
  [--exec-prefix[=DIR]]
  [--version]
  [--cxx]
  [--cxxflags]
  [--ldflags]
  [--libs]
  [--ranlib]
  [--ar] 
                                                                                
EOF
  exit $1
}

if test $# -eq 0; then
  usage 1 1>&2
fi


while test $# -gt 0; do
  case "$1" in
    -*=*) optarg=`echo "$1" | sed 's/[-_a-zA-Z0-9]*=//'` ;;
    *)    optarg= ;;
  esac
                                                                                
  case $1 in
    --prefix=*)
      prefix=$optarg
      if test $exec_prefix_set = no ; then
        exec_prefix=$optarg
      fi
      ;;
    --prefix)
      echo_prefix=yes
      ;;
                                                                                
    --exec-prefix=*)
      exec_prefix=$optarg
      exec_prefix_set=yes
      ;;
                                                                                
    --exec-prefix)
      echo_exec_prefix=yes
      ;;
                                                                                
    --version)
      echo $version
      ;;

    --cxx)
      echo $bagel_qdp_cxx
      ;;
                                                                                
    --cxxflags)
      echo_cxxflags=yes
      ;;
                                                                                
    --ldflags)
      echo_ldflags=yes
      ;;
                                                                                
    --libs)
      echo_libs=yes
      ;; 
    --ar)
      echo ${bagel_qdp_ar}
      ;;
    --ranlib)
      echo ${bagel_qdp_ranlib}
      ;;
  *)
      usage 1 1>&2
      ;;
                                                                                
  esac
  shift
done

if test "X${echo_prefix}X" = "XyesX" ; then
  echo $prefix
fi
                                                                                
if test "X${echo_exec_prefix}X" = "XyesX" ; then
  echo $exec_prefix
fi
                                                                                
if test "X${echo_cxxflags}X" = "XyesX" ; then
  output_cxxflags=
  for i in $bagel_qdp_cxxflags ; do
    case $i in
      -I/usr/include) ;;
      -g) ;;
#     -O*) ;;
#     -W*) ;;
      *)
        case " $output_cflags " in
          *\ $i\ *) ;;                             # already there, skip it
          *) output_cxxflags="$output_cxxflags $i" # add it to output
        esac
    esac
  done
  echo $output_cxxflags
fi


if test "X${echo_ldflags}X" = "XyesX" ; then
  output_ldflags=
  for i in $bagel_qdp_ldflags ; do
    if test "X${i}X" != "X-I/usr/libX" ; then
      case " $output_ldflags " in
        *\ $i\ *) ;;                               # already there, skip it
        *) output_ldflags="$output_ldflags $i"     # add it to output
      esac
    fi
  done
  echo $output_ldflags
fi

if test "X${echo_libs}X" = "XyesX" ; then
  rev_libs=
  for i in $bagel_qdp_libs ; do
    rev_libs="$i $rev_libs"
  done
  output_libs=
  for i in $rev_libs ; do
    case " $output_libs " in
      *\ $i\ *) ;;                         # already there, skip it
      *) output_libs="$i $output_libs" ;;  # add it to output in reverse order
    esac
  done
  echo $output_libs
fi
